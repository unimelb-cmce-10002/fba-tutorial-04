<!-- question-type: prepare -->
### Exercise 1: Visualizing the distributions of profit margin and asset turnover

Our objective is to create the following plots: 

```{r}
#| fig-width: 8
#| fig-height: 8
#| fig-align: "center"
#| echo: false
#| warning: false

firm_strategy <- 
    asx_200_2024 |>
    filter(invested_capital > 0 & at > 0 & sale > 0) |> 
    mutate(
        roic = ebit / invested_capital,
        profit_margin = ebit / sale,
        asset_turnover = sale / at
        )

asset_turnover_hist <- 
    firm_strategy |> 
    ggplot(aes(x = asset_turnover)) + 
    geom_histogram(fill = "skyblue", color = "black", 
                   alpha = 0.7, bins = 100
                   ) +
    labs(title = "Distribution of Asset Turnover for Sample of Large ASX Companies in 2024", 
         x = "Asset Turnover", 
         y = "Frequency"
         ) + 
    theme_minimal()

profit_margin_hist <- 
    firm_strategy |>
    filter(profit_margin > -2) |>
    ggplot(aes(x = profit_margin)) + 
    geom_histogram(fill = "darkorange", color = "black", 
                   alpha = 0.7, bins = 100
                   ) +  
    labs(title = "Distribution of Profit Margin for Sample of Large ASX Companies in 2024", 
       x = "Profit Margin", 
       y = "Frequency"
       ) + 
    theme_minimal() 

asset_turnover_hist / profit_margin_hist
```

**(a).** Before creating these plots yourself, let's think about what we can learn from them. Based on the figure above, what is the profit margin of the typical firm in our sample? How about asset turnover? Given what you know about the types of firm strategy, how do you expect a firm's position in profit margin distribution to relate to its position in the asset turnover distribution?

**(b).** Let's get started on building these plots. First, we need to create two new variables-`profit_margin`, and `asset_turnover`-and store these in a new data frame (which we will use for the rest of this week's exercises). As we did in the lecture, we will also create our measure of firm profitability-`roic`-so that we can study returns in subsequent exercises. Use the starter code below to create these variables. Replace `FUNCTION_NAME` and `YOUR_VARIABLE_NAME` with the appropriate function and variable names.

```{r, eval=FALSE}
firm_strategy <- 
    asx_200_2024 |>
    # Drop observations where we would have to divide by zero when calculating our new variables
    FUNCTION_NAME(invested_capital > 0 & at > 0 & sale > 0) |>
    # Create new variables
    FUNCTION_NAME(
        roic = YOUR_VARIABLE_NAME / YOUR_VARIABLE_NAME,
        profit_margin = YOUR_VARIABLE_NAME / YOUR_VARIABLE_NAME,
        asset_turnover = YOUR_VARIABLE_NAME / YOUR_VARIABLE_NAME
        )
```

**(c).** Next, we want to check that we have correctly created these new variables, `profit_margin`, and `asset_turnover`. To do so, create a short, narrow table that focuses on these variables and their components for a small subset of firms in our sample (in this case, the first 10 observations). Using this table, we can then visually check that each variable is calculated as per the formula above. Use the starter code below to create and display such a table. Replace `YOUR_DATAFRAME_NAME` and `YOUR_FUNCTION_NAME` with the appropriate data frame and function names.

```{r, eval=FALSE}
YOUR_DATAFRAME_NAME |>
    YOUR_FUNCTION_NAME(conml, ebit, at, sale, profit_margin, asset_turnover) |>
    YOUR_FUNCTION_NAME(10) 
```

Your table should look like this:

```{r, echo=FALSE}
firm_strategy |>
    select(conml, ebit, at, sale, profit_margin, asset_turnover) |>
    head(10) 
```

**(d).** Now, we can plot `profit_margin`, and `asset_turnover` and see how they behave for our sample of firms. To do so, we will first create a basic histogram that visualizes the distribution of `profit_margin`. Use the starter code below to produce this plot. Replace `YOUR_DATAFRAME_NAME`, `YOUR_FUNCTION_NAME` and `YOUR_VARIABLE` with the appropriate data frame, function, and variable names.

```{r, eval=FALSE}
YOUR_DATAFRAME_NAME |>
    YOUR_FUNCTION_NAME(aes(x = YOUR_VARIABLE)) + 
    YOUR_FUNCTION_NAME(fill = "darkorange", color = "black", 
                       alpha = 0.7, bins = 100) +
    labs(title = "Distribution of Profit Margin for Sample of Large ASX Companies in 2024",  
         x = YOUR_LABEL,  
         y = YOUR_LABEL
         ) +  
    theme_minimal() 
```

Your plot should look like this:

```{r, echo=FALSE, warning=FALSE}
firm_strategy |>
    ggplot(aes(x = profit_margin)) + 
    geom_histogram(fill = "darkorange", color = "black", 
                   alpha = 0.7, bins = 100) +
    labs(title = "Distribution of Profit Margin for Sample of Large ASX Companies in 2024",  
         x = "Profit Margin",  
         y = "Frequency"
         ) +  
    theme_minimal() 
```

**(e).** Oops! Examining this histogram plot, what issue do you notice with the data that complicates plotting the distribution of `profit_margin`? How do you suggest we address this issue in the data, and what do we gain and lose by doing so?


**(f).** Now, let's move on to our other new variable. Let's create a basic histogram that visualizes the distribution of `asset_turnover`. Use the starter code below to produce this plot. Replace `YOUR_DATAFRAME_NAME`, `YOUR_FUNCTION_NAME` and `YOUR_VARIABLE` with the appropriate data frame, function, and variable names.

```{r, eval=FALSE}
YOUR_DATAFRAME_NAME |>
    YOUR_FUNCTION_NAME(aes(x = YOUR_VARIABLE)) + 
    YOUR_FUNCTION_NAME(fill = "skyblue", color = "black", 
                       alpha = 0.7, bins = 100
                       ) +
    labs(title = "Distribution of Asset Turnover for Sample of Large ASX Companies in 2024", 
         x = YOUR_LABEL,  
         y = YOUR_LABEL
         ) +  
    theme_minimal()
```

Your plot should look like this:

```{r, echo=FALSE, warning=FALSE}

firm_strategy |> 
  ggplot(aes(x = asset_turnover)) + 
  geom_histogram(fill = "skyblue", color = "black", 
                 alpha = 0.7, bins = 100) +
  labs(title = "Distribution of Asset Turnover for Sample of Large ASX Companies in 2024", 
       x = "Asset Turnover", 
       y = "Frequency") + 
  theme_minimal()
  
```

**(g).** This looks better! Examining the plot above, explain why we don't have the issue that complicated plotting the distribution of profit margin.

<!-- BEGIN PROFILE:r-teaching-guide -->
::: {.content-visible when-profile="r-teaching-guide"}

::: {.teaching-block}

::: {.teaching-block-header}
Teaching Note
:::

::: {.teaching-block-body}

üéØ **Learning Objective** 

Students should:

- Understand what profit margin and asset turnover measure, how they differ, and how they relate to firm strategy (high-volume vs. high-margin).
- Interpret histograms of financial ratios, recognising how outliers affect scale and resolution.
- Apply key `dplyr` verbs ‚Äî `select()`, `filter()`, `mutate()`, and `arrange()` ‚Äî to calculate and explore profit margin and asset turnover.
- Make informed choices about handling outliers (filtering, winsorising) and explain the trade-offs between clarity and completeness in analysis.

‚úÖ   **Core Concepts to Highlight**

- Profit margin mechanics: small denominators (sales) + possible negative numerators (profit) can ‚Äúblow up‚Äù ratios and create extreme outliers.
- Asset turnover mechanics: both numerator (sales) and denominator (assets) are generally non-negative and the latter is rarely close to zero, leading to fewer extreme values.
- Censoring patterns: asset turnover is left-censored at zero; profit margin is right-censored at one.
- Visualisation impact: outliers stretch axes, compressing the bulk of the data and making the main pattern hard to see.

üí¨ **Suggested In-Class Prompts** (if needed)

NA

üìå **Common Misunderstandings**

- Thinking all outliers are ‚Äúbad‚Äù data ‚Äî some may reflect genuine and important business cases.
- Believing that removing outliers is always the ‚Äúright‚Äù solution ‚Äî it depends on the research goal.
- Forgetting that ratio volatility is often a denominator problem, not just a numerator problem.

:::

:::

:::
<!-- END PROFILE:r-teaching-guide -->

<!-- BEGIN PROFILE:r-solutions -->
::: {.content-visible when-profile="r-solutions" when-profile="r-teaching-guide"}

::: {.solution-block}

::: {.solution-block-header}
Solution
:::

::: {.solution-block-body}

**(a). Profit margin, asset turnover, and firm strategy**

A histogram of asset turnover tells us how efficient the typical firm in a sample is at generating sales from a given asset base. For our sample, the typical firm has an asset turnover of ~0.5-1.0. A histogram of asset turnover also tells us how much variation there is in how efficiently firms in a sample generate sales from a given asset base. For our sample, we observe that firms are fairly spread out across the distribution with some notable outliers in the right tail (i.e., firms that have asset turnover > 2).

A histogram of profit margin tells us how much profit the typical firm in a sample makes per dollar of sales. For our sample, the typical firm has a profit margin of ~0.2. A histogram of profit margin also tells us how much variation there is in firms' profit margin. For our sample, we observe that firms are fairly tightly clustered between 0.1-0.2 suggesting most firms operate on tight margins. That said, we observe outliers in both the left tail and the right tail (i.e., loss-making firms with large negative margins and highly profitable firms with exceptional margins).

In the high volume vs. high margin strategic framework, we‚Äôd expect a firm‚Äôs position in the asset turnover distribution (volume measure) to relate inversely to its position in the profit margin distribution (margin measure). High-volume firms compete on efficiency and scale: fast-moving goods, low prices, large customer base. And so, often display high asset turnover (sales per unit of assets is high) but low operating margins (less profit per dollar of sales). In contrast, high-margin firms, compete on differentiation, brand, and exclusivity: fewer transactions but each at a higher profit. And so, often display low asset turnover (lower sales relative to assets) but high operating margins.

**(b). Starter code with correct function and variable names**

Here's the updated code:

```{r}
firm_strategy <- 
    asx_200_2024 |>
    filter(invested_capital > 0 & at > 0 & sale > 0) |>
    mutate(
        roic = ebit / invested_capital, 
        profit_margin = ebit / sale,
        asset_turnover = sale / at
        )
```

**(c). The short, narrow table to show new variables**

Here's the updated code:

```{r}
firm_strategy |>
    select(conml, ebit, at, sale, profit_margin, asset_turnover) |>
    head(10) 
```

**(d).  Profit margin histogram **

Here's the updated code:

```{r}
#| warning: false

firm_strategy |>
    ggplot(aes(x = profit_margin)) + 
    geom_histogram(fill = "darkorange", color = "black", 
                   alpha = 0.7, bins = 100
                   ) +
    labs(title = "Distribution of Profit Margin for Sample of Large ASX Companies in 2024",  
         x = "Profit Margin",  
         y = "Frequency"
         ) +  
    theme_minimal()
```

**(e).  Stretching outliers and squeezed histograms**

The histogram of profit margin shows a very long left tail, with a few firms having very negative profit margins. The presence of these extreme outliers stretches the x-axis scale, compressing the rest of our sample into a single bin. This is an issue because we are not able to see how profit margins vary for the vast majority of firms in our sample-i.e., we lose resolution in the region where most data points fall. In other words, the outliers dominate the scale, and the bulk of the distribution looks compressed and uninformative.

For purely mechanical reasons, outliers are an issue for a variable such as profit margin. Because the denominator (sales) can be small and the numerator (profit) can be negative, profit margin can easily 'blow up'. When sales are tiny, a moderate loss leads to a very large negative ratio. These values create long left tails, making the histogram compress most observations into a tiny vertical slither at the right tail.

One way to address this issue is to remove or cap extreme outliers before plotting. For example, we could filter out observations where profit margin is below a certain threshold (e.g., ‚àí10), or we could winsorise the data by replacing extreme values with the nearest acceptable cutoff. The benefits of doing is that it allows us to see the bulk of the distribution more clearly, as we can focus on the region where most firms fall. The downside is that we lose information about the extreme values, which may be important for understanding certain firms' strategies or financial health. The trade-off is between clarity of the main pattern and completeness of the extreme cases.

**(f).  Asset turnover histogram **

Here's the updated code:

```{r}
#| warning: false

firm_strategy |> 
    ggplot(aes(x = asset_turnover)) + 
    geom_histogram(fill = "skyblue", color = "black", 
                   alpha = 0.7, bins = 100
                   ) +
    labs(title = "Distribution of Asset Turnover for Sample of Large ASX Companies in 2024", 
         x = "Asset Turnover", 
         y = "Frequency"
         ) + 
    theme_minimal()
```

**(g).  Lower bounds, well-behaved ratios, and 'nice' histograms **

With asset turnover, both the numerator (sales) and denominator (assets) are (effectively) non-negative by definition in standard financial statements. Even if a firm has unusually low assets, the ratio usually stays within a few multiples of the median ‚Äî extreme values can happen, but they‚Äôre relatively rare (and they can only occur in the right tail). This means the histogram‚Äôs x-axis won‚Äôt get too stretched, so the main cluster of firms remains readable. So the difference is: Asset turnover - denominators are generally large and positive ‚Üí fewer severe outliers. Profit margin - denominators can be small or near zero ‚Üí extreme negative ratios ‚Üí much worse axis compression.

:::

:::

:::
<!-- END PROFILE:r-solutions -->
